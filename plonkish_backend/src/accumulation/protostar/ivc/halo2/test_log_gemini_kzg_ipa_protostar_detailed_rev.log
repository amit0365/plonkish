   Compiling plonkish_backend v0.1.0 (/Users/ak36/Desktop/halo2p/plonkish/plonkish_backend)
warning: unused imports: `BLOCK_SIZE`, `BlockWord`, `Sha256`, `Table16Chip`, `Table16Config`
  --> plonkish_backend/src/accumulation/protostar/ivc/halo2/test.rs:21:14
   |
21 |     sha256::{BlockWord, Sha256, Table16Chip, Table16Config,BLOCK_SIZE},
   |              ^^^^^^^^^  ^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^^^ ^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `Fr`
  --> plonkish_backend/src/accumulation/protostar/ivc/halo2/test.rs:35:26
   |
35 |     bn256::{self, Bn256, Fr},
   |                          ^^

warning: unused import: `poly::Rotation`
  --> plonkish_backend/src/accumulation/protostar/ivc/halo2/test.rs:41:5
   |
41 |     poly::Rotation,
   |     ^^^^^^^^^^^^^^

warning: unused import: `rand::RngCore`
  --> plonkish_backend/src/accumulation/protostar/ivc/halo2/test.rs:46:5
   |
46 | use rand::RngCore;
   |     ^^^^^^^^^^^^^

warning: unused imports: `CurveAffine`, `FromUniformBytes`, `MultiMillerLoop`, `PrimeFieldBits`, `TwoChainCurve`, `fe_to_fe`
  --> plonkish_backend/src/sha256.rs:16:9
   |
16 |         fe_to_fe, CurveAffine, Field, FromUniformBytes, MultiMillerLoop, PrimeFieldBits,
   |         ^^^^^^^^  ^^^^^^^^^^^         ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^
17 |         TwoChainCurve,
   |         ^^^^^^^^^^^^^

warning: unused import: `halo2_curves::bn256::Fr`
  --> plonkish_backend/src/sha256/table16/compression.rs:12:5
   |
12 | use halo2_curves::bn256::Fr;
   |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `halo2_curves::bn256::Fr`
  --> plonkish_backend/src/sha256/table16/compression/compression_util.rs:13:5
   |
13 | use halo2_curves::bn256::Fr;
   |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `halo2_curves::bn256::Fr`
 --> plonkish_backend/src/sha256/table16/compression/subregion_digest.rs:8:5
  |
8 | use halo2_curves::bn256::Fr;
  |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `CurveAffine`, `Field`, `FromUniformBytes`, `MultiMillerLoop`, `PrimeFieldBits`, `TwoChainCurve`, `fe_to_fe`
  --> plonkish_backend/src/sha256/table16/compression/subregion_digest.rs:10:9
   |
10 |         fe_to_fe, CurveAffine, Field, FromUniformBytes, MultiMillerLoop, PrimeFieldBits,
   |         ^^^^^^^^  ^^^^^^^^^^^  ^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^
11 |         TwoChainCurve,
   |         ^^^^^^^^^^^^^

warning: unused import: `halo2_curves::bn256::Fr`
 --> plonkish_backend/src/sha256/table16/compression/subregion_initial.rs:9:5
  |
9 | use halo2_curves::bn256::Fr;
  |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `halo2_curves::bn256::Fr`
 --> plonkish_backend/src/sha256/table16/compression/subregion_main.rs:5:5
  |
5 | use halo2_curves::bn256::Fr;
  |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `hash::Hash`
 --> plonkish_backend/src/sha256/table16/message_schedule.rs:2:23
  |
2 | use std::{fmt::Debug, hash::Hash, marker::PhantomData};
  |                       ^^^^^^^^^^

warning: unused imports: `CurveAffine`, `Field`, `FromUniformBytes`, `MultiMillerLoop`, `PrimeFieldBits`, `TwoChainCurve`, `fe_to_fe`
  --> plonkish_backend/src/sha256/table16/message_schedule.rs:11:5
   |
11 |     fe_to_fe, CurveAffine, Field, FromUniformBytes, MultiMillerLoop, PrimeFieldBits,
   |     ^^^^^^^^  ^^^^^^^^^^^  ^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^
12 |     TwoChainCurve,
   |     ^^^^^^^^^^^^^

warning: unused import: `halo2_curves::bn256::Fr`
 --> plonkish_backend/src/sha256/table16/message_schedule/schedule_util.rs:8:5
  |
8 | use halo2_curves::bn256::Fr;
  |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `halo2_curves::bn256::Fr`
 --> plonkish_backend/src/sha256/table16/message_schedule/subregion1.rs:8:5
  |
8 | use halo2_curves::bn256::Fr;
  |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `halo2_curves::bn256::Fr`
 --> plonkish_backend/src/sha256/table16/message_schedule/subregion2.rs:8:5
  |
8 | use halo2_curves::bn256::Fr;
  |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Field`, `FromUniformBytes`, `MultiMillerLoop`, `PrimeFieldBits`, `TwoChainCurve`, `fe_to_fe`
  --> plonkish_backend/src/sha256/table16/message_schedule/subregion3.rs:11:9
   |
11 |         fe_to_fe, CurveAffine, Field, FromUniformBytes, MultiMillerLoop, PrimeFieldBits,
   |         ^^^^^^^^               ^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^
12 |         TwoChainCurve,
   |         ^^^^^^^^^^^^^

warning: unused import: `halo2_curves::bn256::Fr`
 --> plonkish_backend/src/sha256/table16/spread_table.rs:8:5
  |
8 | use halo2_curves::bn256::Fr;
  |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Blake2bRead`, `Blake2bWrite`, `Challenge255`, `create_proof`, `keygen_pk`, `keygen_vk`, `poly::commitment::Params`, `verify_proof`
 --> plonkish_backend/src/sha_circuit.rs:4:9
  |
4 |         create_proof, keygen_pk, keygen_vk, verify_proof, Circuit, ConstraintSystem, Error,
  |         ^^^^^^^^^^^^  ^^^^^^^^^  ^^^^^^^^^  ^^^^^^^^^^^^
5 |     },
6 |     poly::commitment::Params,
  |     ^^^^^^^^^^^^^^^^^^^^^^^^
7 |     transcript::{Blake2bRead, Blake2bWrite, Challenge255},
  |                  ^^^^^^^^^^^  ^^^^^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `rand::rngs::OsRng`
 --> plonkish_backend/src/sha_circuit.rs:9:5
  |
9 | use rand::rngs::OsRng;
  |     ^^^^^^^^^^^^^^^^^

warning: unused import: `EqAffine`
  --> plonkish_backend/src/sha_circuit.rs:10:35
   |
10 | use halo2_curves::pasta::{pallas, EqAffine};
   |                                   ^^^^^^^^

error[E0782]: trait objects must include the `dyn` keyword
   --> plonkish_backend/src/accumulation/protostar/ivc/halo2/test.rs:616:52
    |
616 |     let gates = CircuitGates::collect::<bn256::Fr, StepCircuit<bn256::Fr>>();
    |                                                    ^^^^^^^^^^^^^^^^^^^^^^
    |
help: add `dyn` keyword before this trait
    |
616 |     let gates = CircuitGates::collect::<bn256::Fr, dyn StepCircuit<bn256::Fr>>();
    |                                                    +++

error[E0191]: the value of the associated types `Config` (from trait `Circuit`), `FloorPlanner` (from trait `Circuit`), `HashChip` (from trait `StepCircuit`), `TccChip` (from trait `StepCircuit`), `TranscriptChip` (from trait `StepCircuit`) must be specified
   --> plonkish_backend/src/accumulation/protostar/ivc/halo2/test.rs:616:52
    |
616 |     let gates = CircuitGates::collect::<bn256::Fr, StepCircuit<bn256::Fr>>();
    |                                                    ^^^^^^^^^^^^^^^^^^^^^^ help: specify the associated types: `StepCircuit<bn256::Fr, TccChip = Type, HashChip = Type, TranscriptChip = Type, Config = Type, FloorPlanner = Type>`
    |
   ::: plonkish_backend/src/accumulation/protostar/ivc/halo2.rs:541:5
    |
541 |     type TccChip: TwoChainCurveInstruction<C>;
    |     ----------------------------------------- `TccChip` defined here
542 |     type HashChip: HashInstruction<C, TccChip = Self::TccChip>;
    |     ---------------------------------------------------------- `HashChip` defined here
543 |     type TranscriptChip: TranscriptInstruction<C, TccChip = Self::TccChip>;
    |     ---------------------------------------------------------------------- `TranscriptChip` defined here

error[E0277]: the size for values of type `dyn StepCircuit<halo2curves::bn256::Fr>` cannot be known at compilation time
   --> plonkish_backend/src/accumulation/protostar/ivc/halo2/test.rs:616:52
    |
616 |     let gates = CircuitGates::collect::<bn256::Fr, StepCircuit<bn256::Fr>>();
    |                                                    ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `dyn StepCircuit<halo2curves::bn256::Fr>`
note: required by a bound in `CircuitGates::collect`
   --> /Users/ak36/.cargo/git/checkouts/halo2-c2a2344be0ab630c/4981b8d/halo2_proofs/src/dev/gates.rs:111:35
    |
111 |     pub fn collect<F: PrimeField, C: Circuit<F>>(
    |                                   ^ required by this bound in `CircuitGates::collect`

error[E0038]: the trait `StepCircuit` cannot be made into an object
   --> plonkish_backend/src/accumulation/protostar/ivc/halo2/test.rs:616:52
    |
616 |     let gates = CircuitGates::collect::<bn256::Fr, StepCircuit<bn256::Fr>>();
    |                                                    ^^^^^^^^^^^^^^^^^^^^^^ `StepCircuit` cannot be made into an object
    |
note: for a trait to be "object safe" it needs to allow building a vtable to allow the call to be resolvable dynamically; for more information visit <https://doc.rust-lang.org/reference/items/traits.html#object-safety>
   --> plonkish_backend/src/accumulation/protostar/ivc/halo2.rs:540:26
    |
540 | pub trait StepCircuit<C: TwoChainCurve>: Clone + Debug + CircuitExt<C::Scalar> {
    |           -----------    ^^^^^^^^^^^^^   ^^^^^ ...because it requires `Self: Sized`
    |           |              |
    |           |              ...because it requires `Self: Sized`
    |           this trait cannot be made into an object...
    |
   ::: /Users/ak36/.cargo/git/checkouts/halo2-c2a2344be0ab630c/4981b8d/halo2_proofs/src/plonk/circuit.rs:762:8
    |
762 |     fn without_witnesses(&self) -> Self;
    |        ^^^^^^^^^^^^^^^^^ ...because method `without_witnesses` references the `Self` type in its return type
...
785 |     fn configure(meta: &mut ConstraintSystem<F>) -> Self::Config;
    |        ^^^^^^^^^ ...because associated function `configure` has no `self` parameter
...
790 |     fn synthesize(&self, config: Self::Config, layouter: impl Layouter<F>) -> Result<(), Error>;
    |        ^^^^^^^^^^ ...because method `synthesize` has generic type parameters
    = help: consider moving `synthesize` to another trait
    = help: consider moving `configure` to another trait
    = help: consider moving `without_witnesses` to another trait

error[E0277]: the trait bound `halo2curves::bn256::Fr: PrimeCurveAffine` is not satisfied
   --> plonkish_backend/src/accumulation/protostar/ivc/halo2/test.rs:616:52
    |
616 |     let gates = CircuitGates::collect::<bn256::Fr, StepCircuit<bn256::Fr>>();
    |                                                    ^^^^^^^^^^^^^^^^^^^^^^ the trait `PrimeCurveAffine` is not implemented for `halo2curves::bn256::Fr`
    |
    = help: the following other types implement trait `PrimeCurveAffine`:
              EpAffine
              EqAffine
              G2Affine
              Secp256k1Affine
              Secp256r1Affine
              halo2curves::bn256::G1Affine
              halo2curves::grumpkin::G1Affine
note: required by a bound in `CircuitGates::collect`
   --> /Users/ak36/.cargo/git/checkouts/halo2-c2a2344be0ab630c/4981b8d/halo2_proofs/src/dev/gates.rs:111:38
    |
111 |     pub fn collect<F: PrimeField, C: Circuit<F>>(
    |                                      ^^^^^^^^^^ required by this bound in `CircuitGates::collect`

warning: unused import: `CurveAffine`
  --> plonkish_backend/src/sha256/table16/message_schedule/subregion3.rs:11:19
   |
11 |         fe_to_fe, CurveAffine, Field, FromUniformBytes, MultiMillerLoop, PrimeFieldBits,
   |                   ^^^^^^^^^^^

warning: unused import: `arithmetic::Field`
 --> plonkish_backend/src/sha256/table16/gates.rs:2:20
  |
2 | use halo2_proofs::{arithmetic::Field, plonk::Expression};
  |                    ^^^^^^^^^^^^^^^^^

Some errors have detailed explanations: E0038, E0191, E0277, E0782.
For more information about an error, try `rustc --explain E0038`.
warning: `plonkish_backend` (lib test) generated 23 warnings
error: could not compile `plonkish_backend` due to 5 previous errors; 23 warnings emitted
